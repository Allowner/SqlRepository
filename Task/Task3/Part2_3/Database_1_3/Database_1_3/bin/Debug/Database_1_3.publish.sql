/*
Deployment script for Northwind

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Northwind"
:setvar DefaultFilePrefix "Northwind"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [dbo].[FK_Territories_Region]...';


GO
ALTER TABLE [dbo].[Territories] DROP CONSTRAINT [FK_Territories_Region];


GO
PRINT N'Altering [dbo].[Customers]...';


GO
ALTER TABLE [dbo].[Customers]
    ADD [CreationDate] DATE NULL;


GO
PRINT N'Creating [dbo].[__RefactorLog]...';


GO
CREATE TABLE [dbo].[__RefactorLog] (
    [OperationKey] UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([OperationKey] ASC)
);


GO
PRINT N'Creating [dbo].[Regions]...';


GO
CREATE TABLE [dbo].[Regions] (
    [RegionID]          INT        NOT NULL,
    [RegionDescription] NCHAR (50) NOT NULL,
    CONSTRAINT [PK_Region] PRIMARY KEY NONCLUSTERED ([RegionID] ASC) ON [PRIMARY]
) ON [PRIMARY];


GO
PRINT N'Creating [dbo].[FK_Territories_Region]...';


GO
ALTER TABLE [dbo].[Territories] WITH NOCHECK
    ADD CONSTRAINT [FK_Territories_Region] FOREIGN KEY ([RegionID]) REFERENCES [dbo].[Regions] ([RegionID]);


GO
PRINT N'Refreshing [dbo].[Customer and Suppliers by City]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Customer and Suppliers by City]';


GO
PRINT N'Refreshing [dbo].[Invoices]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Invoices]';


GO
PRINT N'Refreshing [dbo].[Orders Qry]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Orders Qry]';


GO
PRINT N'Refreshing [dbo].[Quarterly Orders]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Quarterly Orders]';


GO
PRINT N'Refreshing [dbo].[Sales Totals by Amount]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Sales Totals by Amount]';


GO
PRINT N'Creating [dbo].[__RefactorLog].[microsoft_database_tools_support]...';


GO
EXECUTE sp_addextendedproperty @name = N'microsoft_database_tools_support', @value = N'refactoring log', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'__RefactorLog';


GO
PRINT N'Refreshing [dbo].[CustOrderHist]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[CustOrderHist]';


GO
:setvar CustomersTable "Customers"
:setvar SuppliersTable "Suppliers"
:setvar ProductsTable "Products"

GO
MERGE INTO [$(CustomersTable)] C 
USING (
VALUES ('AAAAA','Gourmet Lanchonetes','André Fonseca','Sales Associate',
'Av. Brasil, 442','Campinas','SP','04876-786','Brazil','(11) 555-9482',NULL, NULL),
('BBBBB','Great Lakes Food Market','Howard Snyder',
'Marketing Manager','2732 Baker Blvd.','Eugene','OR','97403','USA','(503) 555-7555',NULL, NULL),
('CCCCC','GROSELLA-Restaurante','Manuel Pereira',
'Owner','5ª Ave. Los Palos Grandes','Caracas','DF','1081','Venezuela','(2) 283-2951','(2) 283-3397', NULL),
('DDDDD','Hanari Carnes','Mario Pontes','Accounting Manager',
'Rua do Paço, 67','Rio de Janeiro','RJ','05454-876','Brazil','(21) 555-0091','(21) 555-8765', NULL),
('EEEEE','HILARION-Abastos','Carlos Hernández','Sales Representative',
'Carrera 22 con Ave. Carlos Soublette #8-35','San Cristóbal','Táchira','5022','Venezuela','(5) 555-1340','(5) 555-1948', NULL)) 
AS Source (CustomerID, CompanyName, ContactName, ContactTitle, [Address], 
City, Region, PostalCode, Country, Phone, Fax, CreationDate)  
ON C.CustomerID = Source.CustomerID 
WHEN NOT MATCHED BY TARGET THEN 
INSERT (CustomerID, CompanyName, ContactName, ContactTitle, [Address], 
City, Region, PostalCode, Country, Phone, Fax, CreationDate) 
VALUES (Source.CustomerID, Source.CompanyName, Source.ContactName, Source.ContactTitle, Source.[Address], 
Source.City, Source.Region, Source.PostalCode, Source.Country, Source.Phone, Source.Fax, Source.CreationDate);

GO
set identity_insert [$(SuppliersTable)] on

GO
MERGE INTO [$(SuppliersTable)] S 
USING (
VALUES (25,'Ma Maison','Jean-Guy Lauzon','Marketing Manager','2960 Rue St. Laurent','Montréal','Québec','H1J 1C3','Canada','(514) 555-9022',NULL,NULL),
(26,'Pasta Buttini s.r.l.','Giovanni Giudici','Order Administrator','Via dei Gelsomini, 153','Salerno',NULL,'84100','Italy','(089) 6547665','(089) 6547667',NULL),
(27,'Escargots Nouveaux','Marie Delamare','Sales Manager','22, rue H. Voiron','Montceau',NULL,'71300','France','85.57.00.07',NULL,NULL),
(28,'Gai pâturage','Eliane Noz','Sales Representative','Bat. B 3, rue des Alpes','Annecy',NULL,'74000','France','38.76.98.06','38.76.98.58',NULL),
(29,'Forêts d''érables','Chantal Goulet','Accounting Manager','148 rue Chasseur','Ste-Hyacinthe','Québec','J2S 7S8','Canada','(514) 555-2955','(514) 555-2921',NULL)) 
AS Source (SupplierID, CompanyName, ContactName, ContactTitle, [Address], City,
Region, PostalCode, Country, Phone, Fax, HomePage)  
ON S.SupplierID = Source.SupplierID 
WHEN NOT MATCHED BY TARGET THEN 
INSERT (SupplierID, CompanyName, ContactName, ContactTitle, [Address], City,
Region, PostalCode, Country, Phone, Fax, HomePage) 
VALUES (Source.SupplierID, Source.CompanyName, Source.ContactName, Source.ContactTitle, Source.[Address], Source.City,
Source.Region, Source.PostalCode, Source.Country, Source.Phone, Source.Fax, Source.HomePage);

GO
set identity_insert [$(SuppliersTable)] off

GO
set identity_insert [$(ProductsTable)] on
GO
ALTER TABLE [$(ProductsTable)] NOCHECK CONSTRAINT ALL

GO
MERGE INTO [$(ProductsTable)] P 
USING ( 
VALUES (73,'Röd Kaviar',17,8,'24 - 150 g jars',15,101,0,5,0),
(74,'Longlife Tofu',4,7,'5 kg pkg.',10,4,20,5,0),
(75,'Rhönbräu Klosterbier',12,1,'24 - 0.5 l bottles',7.75,125,0,25,0),
(76,'Lakkalikööri',23,1,'500 ml',18,57,0,20,0),
(77,'Original Frankfurter grüne Soße',12,2,'12 boxes',13,32,0,15,0)) 
AS Source (ProductID, ProductName, SupplierID, CategoryID, QuantityPerUnit,
UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel, Discontinued)  
ON P.ProductID = Source.ProductID 
WHEN NOT MATCHED BY TARGET THEN 
INSERT (ProductID, ProductName, SupplierID, CategoryID, QuantityPerUnit,
UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel, Discontinued) 
VALUES (Source.ProductID, Source.ProductName, Source.SupplierID, Source.CategoryID, Source.QuantityPerUnit,
Source.UnitPrice, Source.UnitsInStock, Source.UnitsOnOrder, Source.ReorderLevel, Source.Discontinued);

GO
set identity_insert [$(ProductsTable)] off
GO
ALTER TABLE [$(ProductsTable)] CHECK CONSTRAINT ALL
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Territories] WITH CHECK CHECK CONSTRAINT [FK_Territories_Region];


GO
PRINT N'Update complete.';


GO
